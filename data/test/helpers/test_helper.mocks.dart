// Mocks generated by Mockito 5.4.2 from annotations
// in data/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:convert' as _i16;
import 'dart:typed_data' as _i17;

import 'package:data/datasources/local/db/database_helper.dart' as _i12;
import 'package:data/datasources/local/local_data_source.dart' as _i10;
import 'package:data/datasources/remote/remote_data_source.dart' as _i6;
import 'package:data/models/movie/movie_result_response.dart' as _i8;
import 'package:data/models/movie_detail/movie_detail_response.dart' as _i2;
import 'package:data/models/tv_show/tv_show_result_response.dart' as _i9;
import 'package:data/models/tv_show_detail/tv_show_detail_response.dart' as _i3;
import 'package:data/models/watchlist_table.dart' as _i11;
import 'package:http/src/base_request.dart' as _i15;
import 'package:http/src/io_client.dart' as _i14;
import 'package:http/src/io_streamed_response.dart' as _i4;
import 'package:http/src/response.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sqflite/sqflite.dart' as _i13;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMovieDetailResponse_0 extends _i1.SmartFake
    implements _i2.MovieDetailResponse {
  _FakeMovieDetailResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTvShowDetailResponse_1 extends _i1.SmartFake
    implements _i3.TvShowDetailResponse {
  _FakeTvShowDetailResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIOStreamedResponse_2 extends _i1.SmartFake
    implements _i4.IOStreamedResponse {
  _FakeIOStreamedResponse_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_3 extends _i1.SmartFake implements _i5.Response {
  _FakeResponse_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSource extends _i1.Mock implements _i6.RemoteDataSource {
  MockRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<List<_i8.MovieResultResponse>> getNowPlayingMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getNowPlayingMovies,
          [],
        ),
        returnValue: _i7.Future<List<_i8.MovieResultResponse>>.value(
            <_i8.MovieResultResponse>[]),
      ) as _i7.Future<List<_i8.MovieResultResponse>>);
  @override
  _i7.Future<List<_i9.TvShowResultResponse>> getAiringTodayTvShows() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAiringTodayTvShows,
          [],
        ),
        returnValue: _i7.Future<List<_i9.TvShowResultResponse>>.value(
            <_i9.TvShowResultResponse>[]),
      ) as _i7.Future<List<_i9.TvShowResultResponse>>);
  @override
  _i7.Future<List<_i8.MovieResultResponse>> getPopularMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularMovies,
          [],
        ),
        returnValue: _i7.Future<List<_i8.MovieResultResponse>>.value(
            <_i8.MovieResultResponse>[]),
      ) as _i7.Future<List<_i8.MovieResultResponse>>);
  @override
  _i7.Future<List<_i9.TvShowResultResponse>> getPopularTvShows() =>
      (super.noSuchMethod(
        Invocation.method(
          #getPopularTvShows,
          [],
        ),
        returnValue: _i7.Future<List<_i9.TvShowResultResponse>>.value(
            <_i9.TvShowResultResponse>[]),
      ) as _i7.Future<List<_i9.TvShowResultResponse>>);
  @override
  _i7.Future<List<_i8.MovieResultResponse>> getTopRatedMovies() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedMovies,
          [],
        ),
        returnValue: _i7.Future<List<_i8.MovieResultResponse>>.value(
            <_i8.MovieResultResponse>[]),
      ) as _i7.Future<List<_i8.MovieResultResponse>>);
  @override
  _i7.Future<List<_i9.TvShowResultResponse>> getTopRatedTvShows() =>
      (super.noSuchMethod(
        Invocation.method(
          #getTopRatedTvShows,
          [],
        ),
        returnValue: _i7.Future<List<_i9.TvShowResultResponse>>.value(
            <_i9.TvShowResultResponse>[]),
      ) as _i7.Future<List<_i9.TvShowResultResponse>>);
  @override
  _i7.Future<_i2.MovieDetailResponse> getMovieDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieDetail,
          [id],
        ),
        returnValue: _i7.Future<_i2.MovieDetailResponse>.value(
            _FakeMovieDetailResponse_0(
          this,
          Invocation.method(
            #getMovieDetail,
            [id],
          ),
        )),
      ) as _i7.Future<_i2.MovieDetailResponse>);
  @override
  _i7.Future<_i3.TvShowDetailResponse> getTvShowDetail(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvShowDetail,
          [id],
        ),
        returnValue: _i7.Future<_i3.TvShowDetailResponse>.value(
            _FakeTvShowDetailResponse_1(
          this,
          Invocation.method(
            #getTvShowDetail,
            [id],
          ),
        )),
      ) as _i7.Future<_i3.TvShowDetailResponse>);
  @override
  _i7.Future<List<_i8.MovieResultResponse>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMovieRecommendations,
          [id],
        ),
        returnValue: _i7.Future<List<_i8.MovieResultResponse>>.value(
            <_i8.MovieResultResponse>[]),
      ) as _i7.Future<List<_i8.MovieResultResponse>>);
  @override
  _i7.Future<List<_i9.TvShowResultResponse>> getTvShowRecommendations(
          int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTvShowRecommendations,
          [id],
        ),
        returnValue: _i7.Future<List<_i9.TvShowResultResponse>>.value(
            <_i9.TvShowResultResponse>[]),
      ) as _i7.Future<List<_i9.TvShowResultResponse>>);
  @override
  _i7.Future<List<_i8.MovieResultResponse>> searchMovies(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchMovies,
          [query],
        ),
        returnValue: _i7.Future<List<_i8.MovieResultResponse>>.value(
            <_i8.MovieResultResponse>[]),
      ) as _i7.Future<List<_i8.MovieResultResponse>>);
  @override
  _i7.Future<List<_i9.TvShowResultResponse>> searchTvShows(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #searchTvShows,
          [query],
        ),
        returnValue: _i7.Future<List<_i9.TvShowResultResponse>>.value(
            <_i9.TvShowResultResponse>[]),
      ) as _i7.Future<List<_i9.TvShowResultResponse>>);
}

/// A class which mocks [LocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSource extends _i1.Mock implements _i10.LocalDataSource {
  MockLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<String> insertWatchlist(_i11.WatchlistTable? watchlistTable) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [watchlistTable],
        ),
        returnValue: _i7.Future<String>.value(''),
      ) as _i7.Future<String>);
  @override
  _i7.Future<String> removeWatchlist(_i11.WatchlistTable? watchlistTable) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [watchlistTable],
        ),
        returnValue: _i7.Future<String>.value(''),
      ) as _i7.Future<String>);
  @override
  _i7.Future<_i11.WatchlistTable?> getWatchlistById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistById,
          [id],
        ),
        returnValue: _i7.Future<_i11.WatchlistTable?>.value(),
      ) as _i7.Future<_i11.WatchlistTable?>);
  @override
  _i7.Future<List<_i11.WatchlistTable>> getWatchlists() => (super.noSuchMethod(
        Invocation.method(
          #getWatchlists,
          [],
        ),
        returnValue: _i7.Future<List<_i11.WatchlistTable>>.value(
            <_i11.WatchlistTable>[]),
      ) as _i7.Future<List<_i11.WatchlistTable>>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i12.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set setDatabase(_i13.Database? _setDatabase) => super.noSuchMethod(
        Invocation.setter(
          #setDatabase,
          _setDatabase,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<_i13.Database?> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i7.Future<_i13.Database?>.value(),
      ) as _i7.Future<_i13.Database?>);
  @override
  _i7.Future<int> insertWatchlist(_i11.WatchlistTable? watchlistTable) =>
      (super.noSuchMethod(
        Invocation.method(
          #insertWatchlist,
          [watchlistTable],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);
  @override
  _i7.Future<int> removeWatchlist(_i11.WatchlistTable? watchlistTable) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeWatchlist,
          [watchlistTable],
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);
  @override
  _i7.Future<Map<String, dynamic>?> getWatchlistById(int? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getWatchlistById,
          [id],
        ),
        returnValue: _i7.Future<Map<String, dynamic>?>.value(),
      ) as _i7.Future<Map<String, dynamic>?>);
  @override
  _i7.Future<List<Map<String, dynamic>>> getWatchlist() => (super.noSuchMethod(
        Invocation.method(
          #getWatchlist,
          [],
        ),
        returnValue: _i7.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i7.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [IOClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i14.IOClient {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i4.IOStreamedResponse> send(_i15.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i7.Future<_i4.IOStreamedResponse>.value(_FakeIOStreamedResponse_2(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i7.Future<_i4.IOStreamedResponse>);
  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i7.Future<_i5.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i16.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i16.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i16.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i5.Response>);
  @override
  _i7.Future<_i5.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i16.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i7.Future<_i5.Response>.value(_FakeResponse_3(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i7.Future<_i5.Response>);
  @override
  _i7.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<String>.value(''),
      ) as _i7.Future<String>);
  @override
  _i7.Future<_i17.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i7.Future<_i17.Uint8List>.value(_i17.Uint8List(0)),
      ) as _i7.Future<_i17.Uint8List>);
}
